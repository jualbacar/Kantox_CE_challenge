apiVersion: apps/v1
kind: Deployment
metadata:
  name: aux
  namespace: aux
  labels:
    app: aux
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: kantox-challenge
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: aux
  template:
    metadata:
      labels:
        app: aux
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: kantox-challenge
    spec:
      imagePullSecrets:
      - name: ecr-registry-secret
      containers:
      - name: aux
        image: 035895024082.dkr.ecr.eu-west-1.amazonaws.com/kantox-aux:sha-09015f4
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        # AWS Credentials from Secret
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aux-aws-credentials
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aux-aws-credentials
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_ROLE_ARN
          valueFrom:
            secretKeyRef:
              name: aux-aws-credentials
              key: AWS_ROLE_ARN
        # Configuration from ConfigMap
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: aux-config
              key: ENVIRONMENT
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: aux-config
              key: AWS_REGION
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: aux-config
              key: LOG_LEVEL
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: aux-config
              key: SERVICE_NAME
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
